//
//  DetailsInterfaces.swift
//  Viper-Demo
//
//  Created by Zvonimir Medak on 07.10.2021..
//  Copyright (c) 2021 Infinum. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

protocol DetailsWireframeInterface: WireframeInterface {
}

protocol DetailsViewInterface: ViewInterface {
}

protocol DetailsPresenterInterface: PresenterInterface {
    func configure(with output: Details.ViewOutput) -> Details.ViewInput
}

protocol DetailsFormatterInterface: FormatterInterface {
    func format(for input: Details.FormatterInput) -> Details.FormatterOutput
}

protocol DetailsInteractorInterface: InteractorInterface {
    func getShowDetails(for showId: String) -> Single<Show>
    func getAllReviews(for showId: String) -> Single<[Review]>
}

enum Details {

    struct ViewOutput {
    }

    struct ViewInput {
        let models: FormatterOutput
        let events: DetailsEvents
    }

    struct FormatterInput {
        let models: Driver<(Show, [Review])>
    }

    struct FormatterOutput {
        let sections: Driver<[TableSectionItem]>
    }

}

struct DetailsEvents {
    let title: Signal<String>
}
